plugins {
	id 'dev.architectury.loom' version '1.7-SNAPSHOT'
	id "architectury-plugin" version "3.4-SNAPSHOT"
	id 'org.jetbrains.kotlin.jvm' version '2.0.20'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

architectury {
	platformSetupLoomIde()
	fabric()
}

fabricApi {
	configureDataGeneration()
}

repositories {
	maven {
		url = "https://api.modrinth.com/maven"
	}
	maven {
		name = "Cobblemon"
		url = "https://maven.impactdev.net/repository/development/"
	}
	maven {
		url = "https://mvnrepository.com/artifact/dev.architectury/architectury-fabric"
	}
	mavenCentral()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modCompileOnly("com.cobblemon:mod:${project.cobblemon_version}")
	modRuntimeOnly("com.cobblemon:fabric:${project.cobblemon_version}")

	modImplementation("net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}")
	compileOnly("net.luckperms:api:${project.luckperms_version}")
	modImplementation("com.google.code.gson:gson:${project.gson_version}")

	modImplementation("maven.modrinth:cobblemon-myths-and-legends-sidemod:${project.myths_and_legends_version}")
	modRuntimeOnly("com.moandjiezana.toml:toml4j:${project.toml_version}")
	modRuntimeOnly("dev.architectury:architectury-fabric:${project.architectury_api_version}")
	modRuntimeOnly("maven.modrinth:emi:${project.emi_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

kotlin {
	jvmToolchain {
		(21)
	}
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}
